/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#ifndef QML_MLM_PROTO_H
#define QML_MLM_PROTO_H

#include <QtQml>

#include <malamute.h>
#include "qml_malamute_plugin.h"


class QmlMlmProto : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool isNULL READ isNULL)

public:
    mlm_proto_t *self;

    QmlMlmProto() { self = NULL; }
    bool isNULL() { return self == NULL; }

    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlMlmProto.cpp

public slots:
    //  Create a deep copy of a mlm_proto instance
    QmlMlmProto *dup ();

    //  Receive a mlm_proto from the socket. Returns 0 if OK, -1 if
    //  there was an error. Blocks if there is no message waiting.
    int recv (zsock_t *input);

    //  Send the mlm_proto to the output socket, does not destroy it
    int send (zsock_t *output);

    //  Print contents of message to stdout
    void print ();

    //  Export class as zconfig_t*. Caller is responsibe for destroying the instance
    zconfig_t *zpl (zconfig_t *parent);

    //  Get the message routing id, as a frame
    zframe_t *routingId ();

    //  Set the message routing id from a frame
    void setRoutingId (zframe_t *routingId);

    //  Get the mlm_proto message id
    int id ();

    //  Set the mlm_proto message id
    void setId (int id);

    //  Get the mlm_proto message id as printable text
    const QString command ();

    //  Get the address field
    const QString address ();

    //  Set the address field
    void setAddress (const QString &address);

    //  Get the stream field
    const QString stream ();

    //  Set the stream field
    void setStream (const QString &stream);

    //  Get the pattern field
    const QString pattern ();

    //  Set the pattern field
    void setPattern (const QString &pattern);

    //  Get the subject field
    const QString subject ();

    //  Set the subject field
    void setSubject (const QString &subject);

    //  Get a copy of the content field
    zmsg_t *content ();

    //  Get the content field and transfer ownership to caller
    zmsg_t *getContent ();

    //
    void setContent (zmsg_t **contentP);

    //  Get the sender field
    const QString sender ();

    //  Set the sender field
    void setSender (const QString &sender);

    //  Get the tracker field
    const QString tracker ();

    //  Set the tracker field
    void setTracker (const QString &tracker);

    //  Get the timeout field
    uint32_t timeout ();

    //  Set the timeout field
    void setTimeout (uint32_t timeout);

    //  Get the status_code field
    uint16_t statusCode ();

    //  Set the status_code field
    void setStatusCode (uint16_t statusCode);

    //  Get the status_reason field
    const QString statusReason ();

    //  Set the status_reason field
    void setStatusReason (const QString &statusReason);

    //  Get the amount field
    uint16_t amount ();

    //  Set the amount field
    void setAmount (uint16_t amount);
};

class QmlMlmProtoAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;

public:
    QmlMlmProtoAttached (QObject* attached) {
        Q_UNUSED (attached);
    };

public slots:
    //  Self test of this class.
    void test (bool verbose);

    //  Create a new empty mlm_proto
    QmlMlmProto *construct ();

    //  Create a new mlm_proto from zpl/zconfig_t *
    QmlMlmProto *constructZpl (zconfig_t *config);

    //  Destroy a mlm_proto instance
    void destruct (QmlMlmProto *qmlSelf);
};


QML_DECLARE_TYPEINFO(QmlMlmProto, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
