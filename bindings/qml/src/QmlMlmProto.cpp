/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#include "QmlMlmProto.h"


///
//  Create a deep copy of a mlm_proto instance
QmlMlmProto *QmlMlmProto::dup () {
    QmlMlmProto *retQ_ = new QmlMlmProto ();
    retQ_->self = mlm_proto_dup (self);
    return retQ_;
};

///
//  Receive a mlm_proto from the socket. Returns 0 if OK, -1 if
//  there was an error. Blocks if there is no message waiting.
int QmlMlmProto::recv (zsock_t *input) {
    return mlm_proto_recv (self, input);
};

///
//  Send the mlm_proto to the output socket, does not destroy it
int QmlMlmProto::send (zsock_t *output) {
    return mlm_proto_send (self, output);
};

///
//  Print contents of message to stdout
void QmlMlmProto::print () {
    mlm_proto_print (self);
};

///
//  Export class as zconfig_t*. Caller is responsibe for destroying the instance
zconfig_t *QmlMlmProto::zpl (zconfig_t *parent) {
    return mlm_proto_zpl (self, parent);
};

///
//  Get the message routing id, as a frame
zframe_t *QmlMlmProto::routingId () {
    return mlm_proto_routing_id (self);
};

///
//  Set the message routing id from a frame
void QmlMlmProto::setRoutingId (zframe_t *routingId) {
    mlm_proto_set_routing_id (self, routingId);
};

///
//  Get the mlm_proto message id
int QmlMlmProto::id () {
    return mlm_proto_id (self);
};

///
//  Set the mlm_proto message id
void QmlMlmProto::setId (int id) {
    mlm_proto_set_id (self, id);
};

///
//  Get the mlm_proto message id as printable text
const QString QmlMlmProto::command () {
    return QString (mlm_proto_command (self));
};

///
//  Get the address field
const QString QmlMlmProto::address () {
    return QString (mlm_proto_address (self));
};

///
//  Set the address field
void QmlMlmProto::setAddress (const QString &address) {
    mlm_proto_set_address (self, address.toUtf8().data());
};

///
//  Get the stream field
const QString QmlMlmProto::stream () {
    return QString (mlm_proto_stream (self));
};

///
//  Set the stream field
void QmlMlmProto::setStream (const QString &stream) {
    mlm_proto_set_stream (self, stream.toUtf8().data());
};

///
//  Get the pattern field
const QString QmlMlmProto::pattern () {
    return QString (mlm_proto_pattern (self));
};

///
//  Set the pattern field
void QmlMlmProto::setPattern (const QString &pattern) {
    mlm_proto_set_pattern (self, pattern.toUtf8().data());
};

///
//  Get the subject field
const QString QmlMlmProto::subject () {
    return QString (mlm_proto_subject (self));
};

///
//  Set the subject field
void QmlMlmProto::setSubject (const QString &subject) {
    mlm_proto_set_subject (self, subject.toUtf8().data());
};

///
//  Get a copy of the content field
zmsg_t *QmlMlmProto::content () {
    return mlm_proto_content (self);
};

///
//  Get the content field and transfer ownership to caller
zmsg_t *QmlMlmProto::getContent () {
    return mlm_proto_get_content (self);
};

///
//
void QmlMlmProto::setContent (zmsg_t **contentP) {
    mlm_proto_set_content (self, contentP);
};

///
//  Get the sender field
const QString QmlMlmProto::sender () {
    return QString (mlm_proto_sender (self));
};

///
//  Set the sender field
void QmlMlmProto::setSender (const QString &sender) {
    mlm_proto_set_sender (self, sender.toUtf8().data());
};

///
//  Get the tracker field
const QString QmlMlmProto::tracker () {
    return QString (mlm_proto_tracker (self));
};

///
//  Set the tracker field
void QmlMlmProto::setTracker (const QString &tracker) {
    mlm_proto_set_tracker (self, tracker.toUtf8().data());
};

///
//  Get the timeout field
uint32_t QmlMlmProto::timeout () {
    return mlm_proto_timeout (self);
};

///
//  Set the timeout field
void QmlMlmProto::setTimeout (uint32_t timeout) {
    mlm_proto_set_timeout (self, timeout);
};

///
//  Get the status_code field
uint16_t QmlMlmProto::statusCode () {
    return mlm_proto_status_code (self);
};

///
//  Set the status_code field
void QmlMlmProto::setStatusCode (uint16_t statusCode) {
    mlm_proto_set_status_code (self, statusCode);
};

///
//  Get the status_reason field
const QString QmlMlmProto::statusReason () {
    return QString (mlm_proto_status_reason (self));
};

///
//  Set the status_reason field
void QmlMlmProto::setStatusReason (const QString &statusReason) {
    mlm_proto_set_status_reason (self, statusReason.toUtf8().data());
};

///
//  Get the amount field
uint16_t QmlMlmProto::amount () {
    return mlm_proto_amount (self);
};

///
//  Set the amount field
void QmlMlmProto::setAmount (uint16_t amount) {
    mlm_proto_set_amount (self, amount);
};


QObject* QmlMlmProto::qmlAttachedProperties(QObject* object) {
    return new QmlMlmProtoAttached(object);
}


///
//  Self test of this class.
void QmlMlmProtoAttached::test (bool verbose) {
    mlm_proto_test (verbose);
};

///
//  Create a new empty mlm_proto
QmlMlmProto *QmlMlmProtoAttached::construct () {
    QmlMlmProto *qmlSelf = new QmlMlmProto ();
    qmlSelf->self = mlm_proto_new ();
    return qmlSelf;
};

///
//  Create a new mlm_proto from zpl/zconfig_t *
QmlMlmProto *QmlMlmProtoAttached::constructZpl (zconfig_t *config) {
    QmlMlmProto *qmlSelf = new QmlMlmProto ();
    qmlSelf->self = mlm_proto_new_zpl (config);
    return qmlSelf;
};

///
//  Destroy a mlm_proto instance
void QmlMlmProtoAttached::destruct (QmlMlmProto *qmlSelf) {
    mlm_proto_destroy (&qmlSelf->self);
};

/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
